var iFileName = "Weapons v13.js";

WeaponsList["sword of purple"] = {

	name : "Sword of Purple",
	source : ["HB", 0],
	defaultExcluded : true,
	regExpSearch : /    /i,
	type : "Martial",
/*	type // REQUIRED //
	
		"AlwaysProf"		// none of the other types apply, always proficient
		"Natural"			// natural weapons (always proficient)
		"Simple"			// simple weapons
		"Martial"			// martial weapons
		"Cantrip"			// cantrips (always proficient)
		"Spell"				// 1st-level and higher spells (always proficient)
		"Improvised Weapons"// improvised weapons such as vial of acid
	   Firearms?
     
	ability : 1,
	TYPE:	number corresponding to the ability score (1 = Str, 2 = Dex, 3 = Con, 4 = Int, 5 = Wis, 6 = Cha)

	abilitytodamage : true,
  
	damage : [2, 4, "piercing"],
			"acid", "bludgeoning", "cold", "fire", "force", "lightning", "necrotic",
			"piercing", "poison", "psychic", "radiant", "slashing", and "thunder"
	
	range : "Melee, 20/60 ft",
	For short- and long ranges, use the notation [short]/[long] [unit]."Melee".
*/
	description : "Finesse, light",

*/
	list : "melee",

		"melee"		// melee weapons
		"ranged"	// ranged weapons
		"spell"		// cantrips and spells
		"improvised"// improvised weapons such as vial of acid
	If you use any other string than the four options given above,
	the weapon will appear at the end of the drop-down options.
	The 'list' attribute is ignored for WeaponsList objects used in the 'weaponOptions' attribute.
	Instead, all things added using the 'weaponOptions' attribute will always be added at the top of the drop-down field.
*/
	weight : 24,

	modifiers : [1, ""],

	isMagicWeapon : true,
/*	isMagicWeapon // OPTIONAL //
	TYPE:	boolean
	USE:	whether (true) or not (false) this weapon is a magical weapon
	This attribute only has an effect for attack calculations and magic item selection.
	Add this if you don't want class features and the like to add modifiers or write "Counts as magical" in the description of this attack.
	Also add this if you don't want this weapon to be an option for magical weapons to add their attributes to.
	Note that if you set the 'type' attribute to "Cantrip" or "Spell", it will already be treated as a magical attack.
	Weapons added by magic items using the 'weaponOptions' attribute will always have this attribute added and set to 'true'.
	Setting this to false is the same as not including this attribute.
*/
	isAlwaysProf : true,
/*	isAlwaysProf // OPTIONAL //
	TYPE:	boolean
	USE:	whether (true) or not (false) the proficiency bonus should always be added for this weapon
	This attribute only has an effect if the character would otherwise not be proficient with this weapon.
	Add this for weapons where the normal way of determining proficiency would not produce the correct result.
	For example, if you set 'type' above to 'Cantrip', setting this to 'true' will have no effect.
	Another example, if you set 'type' above to 'Simple', setting this to 'true' will add proficiency
	even if the character is not proficient with simple weapons (or has the weapon listed in 'other weapon proficiencies').
	Setting this to false is the same as not including this attribute.
*/
	ammo : "bolt",
 "arrow", "bolt", "bullet", "dagger", "dart", "flask", "axe", "javelin",
	"hammer", "needle", "spear", "trident", and "vial" [note the use of only lower case!].
	This list of options can be greater if you add another AmmoList object using the "ammunition (AmmoList).js" syntax file.
}



var iFileName = "Homebrew Syntax - ToolsList.js";
RequiredSheetVersion("13");

ToolsList["purplemancer's tools"] = {
	infoname : "Purplemancer's tools [500 gp]",
	name : "Purplemancer's tools",
	amount : "",
	weight : 12,
	type : "artisan's tools",
		source : ["HB", 0], };
/*
		"artisan's tools"
		"gaming set"
		"musical instrument"
		"New subset x2 min" *\
	

var iFileName = "Homebrew Syntax - GearList.js";
RequiredSheetVersion("13");

GearList["purple bullets"] = {
	infoname : "Bullets, Purple (10) [5 sp]",
	name : "Purple Bullets",
	amount : 10,
	weight : 0.05,
	type : "ammunition",
	source : ["HB", 0],
}
/*
		"ammunition"
		"arcane focus"
		"clothes"
		"druidic focus"
		"holy symbol"
		"saddle"
		"new subset x2 min
*/
	



var iFileName = "Homebrew Syntax - PacksList.js";
RequiredSheetVersion("13");

PacksList["purplepack"] = {
	name : "Purple pack (10 gp)",
	source : ["HB", 0],
	items : [
		["Backpack, with:", "", 5],
		["Rations, days of", 5, 2],
		["Tinderbox", "", 1],
		["Waterskin", "", 5],
		["Hempen rope, feet of", 50, 0.2]
	]
}




var iFileName = "Homebrew Syntax - AmmoList.js";
RequiredSheetVersion("13");

AmmoList["purple bullets"] = {
	name : "Purple Bullets",
	source : ["HB", 0],
	defaultExcluded : true,
	icon : "Bullets",
	weight : 24,
	isMagicAmmo : true,
}

/*
		"Arrows" default
		"Axes"
		"Bullets"
		"Daggers"
		"Flasks"
		"Hammers"
		"Spears"
		"Vials" */
	





var iFileName = "Homebrew Syntax - ArmourList.js";
RequiredSheetVersion("13");

ArmourList["purple mail"] = {
	name : "Purple Mail",
	source : ["HB", 0],
	defaultExcluded : true,
	regExpSearch : /purple mail/i,
	ac : 12,
	type : "heavy",
	dex : 3,
	stealthdis : true,
	addMod : true,
	weight : 24,
	strReq : 15,
}	
/*	dex // OPTIONAL //
	TYPE:	number
	USE:	the maximum Dexterity modifier that can be added to the AC with this armour
	When you set this attribute to -10, the sheet will never add the Dexterity modifier to AC, regardless of its value.
	Doing so essentially works the same as the rules for heavy armour.
	Note that this is normally determined by the 'type' attribute set above.
	For example, if you set the 'type' to "medium", the max Dex mod is 2.
	And when you set the 'type' to "heavy", the Dex mod added to AC is always 0.
	Simply don't include this attribute if the max Dex mod is determined by the armour type or if there is no limit.
*/
	
/*	addMod // OPTIONAL //
	TYPE:	boolean
	USE:	set to 'true' if the armour can have a secondary ability score modifier added to the AC
	This secondary ability score is taken from the name of the armour.
	If the name includes, in brackets the three-letter abbreviation of an ability score
	or "Prof" for the proficiency bonus, that modifier will be added to the AC total.
	For example, if this attribute is true and the name is "Purple Mail (Con)",
	the total AC will the AC of this armour + the Dex mod + the Con mod.
	Even if this attribute is set to true, the armour doesn't need a secondary modifier and
	will work perfectly fine without it being present in the name.
	Setting this to false is the same as not including this attribute.
*/
	
